<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Moja Biblioteka</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-fv40Xd+sHoj1au29CtYJ9zNUQmJ3jIsA8enUeEThsD0l/sXXKkm7/pKjIjXG/HNcnvGIlTk/x5zT/H+cDnOeGw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <style>
    .profile-container {
      display: flex;
      flex-direction: column;
      align-items: center; /* Wyśrodkowanie zawartości w pionie */
      border: 1px solid #d1d5db; /* Ramka wokół kontenera */
      border-radius: 8px;
      padding: 16px;
      width: 100%;
      max-width: 800px; /* Dostosuj maksymalną szerokość kontenera według potrzeb */
      margin: 0 auto; /* Wyśrodkowanie kontenera na stronie */
    }

    /* Styl dla obszaru zmiany profilowego */
    .profile-image-upload {
      text-align: center;
      border: 1px solid #d1d5db; /* Ramka wokół obszaru zmiany profilowego */
      border-radius: 8px;
      padding: 16px;
      margin-right: 16px; /* Dodatkowa odległość od innych elementów */
    }

    /* Styl dla komórki z informacją */
    .profile-info-cell {
      font-weight: bold;
    }

    /* Dodaj styl dla sekcji ustawień */
    .profile-settings {
      flex: 1;
      padding-left: 16px; /* Odległość od lewego marginesu */
      border-left: 1px solid #d1d5db; /* Dodaj border po lewej stronie sekcji ustawień */
    }

    /* Styl dla tytułu sekcji ustawień */
    .profile-settings-title {
      font-size: 20px;
      font-weight: bold;
      margin-bottom: 16px;
    }

    /* Styl dla poszczególnych opcji ustawień */
    .profile-setting {
      margin-bottom: 12px;
    }

    /* Styl dla przycisku zapisz zmiany */
    .save-button {
      background-color: #4CAF50;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
    }

    .save-button:hover {
      background-color: #45a049;
    }

    /* Styl dla obszaru ustawień profilu */
    .profile-settings-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      margin-top: 20px;
      padding: 16px;
      border: 1px solid #d1d5db;
      border-radius: 8px;
    }
    
    /* Styl dla przesunięcia sekcji ustawień na lewą stronę */
    .profile-settings-left {
      order: -1;
    }

    /* Styl dla zdjęcia profilowego */
    .profile-image-container {
      margin-top: 20px; /* Przesunięcie na dół */
      background-color: #333; /* Kolor tła */
      padding: 16px; /* Odstęp od tła */
      border-radius: 50%; /* Zaokrąglenie */
      overflow: hidden; /* Ukryj zawartość poza obrębem */
      width: 200px; /* Nowa szerokość zdjęcia profilowego */
      height: 200px; /* Nowa wysokość zdjęcia profilowego */
    }

    .profile-image-container img {
      width: 100%; /* Zdjęcie wypełnia cały kontener */
      height: 100%; /* Zdjęcie wypełnia cały kontener */
      object-fit: cover; /* Skalowanie zdjęcia, aby wypełnić cały kontener */
    }

    .change-profile-text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0, 0, 0, 0.7);
      color: white;
      padding: 8px;
      border-radius: 4px;
      cursor: pointer;
      display: none;
    }

    .profile-image-container:hover .change-profile-text {
      display: block;
    }
  </style>
</head>
<body class="bg-gray-900 text-white p-4">
  <!-- Górny pasek nawigacyjny (header) -->
  <header class="bg-gray-800 p-4 sticky top-0">
    <div class="container mx-auto flex justify-between items-center">
      <!-- Logo -->
      <div class="flex items-center space-x-4">
        <img src="https://creazilla-store.fra1.digitaloceanspaces.com/emojis/57891/open-book-emoji-clipart-xl.png" alt="Logo" class="h-8">
        <h1 class="text-2xl font-semibold">Moja Biblioteka</h1>
      </div>
      <!-- Wyszukiwarka -->
      <div class="flex items-center space-x-4"> <!-- Centrowanie -->
        <div class="relative">
          <input
            type="text"
            id="search"
            name="search"
            placeholder="Szukaj..."
            class="w-64 px-3 py-1 text-gray-800 bg-gray-100 border rounded-full focus:outline-none focus:shadow-outline"
            onkeyup="redirectToSearchResults(event)"
          >
          <button class="absolute top-0 right-0 mt-2 mr-3" type="submit">
            <svg class="w-4 h-4 fill-current text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9 0a9 9 0 1 0 0 18A9 9 0 0 0 9 0zm3 6h5v2h-5V6z"/></svg>
          </button>
        </div>
      </div>
      <!-- Nawigacja -->
      <nav>
        <ul class="flex space-x-4 items-center h-10 relative"> <!-- Dodane klasy items-center i h-10 -->
          <li><a href="#" class="transition duration-300 hover:text-blue-500">Katalog</a></li>
          <li><a href="#" class="transition duration-300 hover:text-blue-500">Gatunki</a></li>
          <li><a href="#" class="transition duration-300 hover:text-blue-500">Autorzy</a></li>
          <% if (username && email) { %>
            <li class="relative group">
              <a href="/profile" id="profile-button" class="transition duration-300 hover:text-blue-500 border border-gray-300 rounded-lg px-3 py-2 flex items-center space-x-2 h-full">
                <span class="text-gray-300">Twój Profil</span>
              </a>
              <ul class="absolute hidden bg-gray-800 text-white rounded-lg mt-2 space-y-2 shadow-lg right-0 w-40" id="profile-menu">
                <li>
                  <a href="/settings" class="block w-full px-4 py-2 text-left">
                    <button type="button">Ustawienia</button>
                  </a>
                </li>
                <li>
                  <form action="/logout" method="POST">
                    <button type="submit" class="block w-full px-4 py-2 text-left">Wyloguj się</button>
                  </form>
                </li>
              </ul>
            </li>
          <% } else { %>
            <li><a href="/login" id="login-button" class="transition duration-300 hover:text-blue-500 border border-gray-300 rounded-lg px-3 py-2 flex items-center space-x-2 h-full">
              <span class="text-gray-300">Logowanie</span>
            </a></li>
          <% } %>
        </ul>
      </nav>
    </div>
  </header>
  <div class="card min-w-sm border border-gray-700 bg-gray-900 text-gray-50 transition-shadow shadow-xl hover:shadow-xl min-w-max">
    <div class="flex flex-col items-center p-4">
      <div class="relative">
        <input
          type="file"
          id="profilePictureInput"
          class="hidden"
          accept="image/*"
          onchange="changeProfilePicture(event)"
        />
        <label
          for="profilePictureInput"
          class="h-40 w-40 md:h-48 md:w-48 rounded-full cursor-pointer group relative"
        >
          <img
            id="profilePicture"
            class="h-40 w-40 md:h-48 md:w-48 rounded-full relative group-hover:blur-sm transition-blur duration-300"
            src="<%= profilePicture %>" 
            alt="Zdjęcie profilowe"
          />
          <div
            class="absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center text-white text-lg opacity-0 group-hover:opacity-100 transition-opacity"
          >
            Zmień profilowe
          </div>
        </label>
      </div>
      
      
      
    </div>
    <div class="flex flex-col space-y-1 justify-center items-center w-full text-center">
      <span class="text-md whitespace-nowrap text-gray-50 font-semibold"><%= username %></span>
      <p class="text-sm text-gray-200" id="user-description">
        <% if (userDescription) { %>
          <%= userDescription %>
          <br />
          <button onclick="showEditDescriptionForm()">Edytuj opis</button>
        <% } else { %>
          Nie posiadasz jeszcze opisu, <button onclick="showEditDescriptionForm()">napisz go!</button>
        <% } %>
      </p>
    
      <div id="edit-description-form" class="hidden mt-4">
        <form action="/update-description" method="POST">
          <input type="text" name="newDescription" placeholder="Nowy opis" value="<%= userDescription || '' %>">
          <button type="submit">Zaktualizuj opis</button>
        </form>
      </div>
    </div>
        <div class="py-2 flex justify-center items-center w-full divide-x divide-gray-400 divide-solid">
          <div class="flex justify-center space-x-4"> <!-- Dodane kontenery -->
            <button class="max-h-max whitespace-nowrap focus:outline-none focus:ring focus:border-blue-300 rounded max-w-max border bg-transparent border-purple-400 text-purple-400 hover:border-purple-800 hover:border-purple-500 px-4 py-1 flex items-center hover:shadow-lg">
              <span class="mr-2"></span>wyślij wiadomość
              <span class="ml-2"></span>
            </button>
            <button class="max-h-max whitespace-nowrap focus:outline-none focus:ring focus:border-blue-300 rounded max-w-max text-gray-100 bg-green-500 hover:bg-green-600 px-4 py-1 flex items-center hover:shadow-lg">
              <span class="mr-2">
                <svg height="20" width="20" viewBox="0 0 32 32" class="fill-current text-red-100">
                  <path d="M22.5,4c-2,0-3.9,0.8-5.3,2.2L16,7.4l-1.1-1.1C12,3.3,7.2,3.3,4.3,6.2c0,0-0.1,0.1-0.1,0.1c-3,3-3,7.8,0,10.8L16,29l11.8-11.9c3-3,3-7.8,0-10.8C26.4,4.8,24.5,4,22.5,4z"></path>
                </svg>
              </span>
              Obserwuj
              <span class="ml-2"></span>
            </button>
          </div>
        </div>
        <div class="py-4 flex justify-center items-center w-full divide-x divide-gray-400 divide-solid">
          <span class="text-center px-2">
            <span class="font-bold text-gray-50"><%= user.reviewCount %></span>
            <span class="text-gray-100"> napisane recenzje</span>
          </span>
          
          <span class="text-center px-2">
            <span class="font-bold text-gray-50">0</span>
            <span class="text-gray-100"> obserwujacych</span>
          </span>
          <span class="text-center px-2">
            <span class="font-bold text-gray-50">0</span>
            <span class="text-gray-100"> obserwowanych</span>
          </span>
        </div>
      </div>
    </div>
  </div>
  <h1>Twoje ostatnie recenzje:</h1>
  <div class="container mx-auto mt-4">
    <div class="flex flex-wrap -mx-4">
      <% userReviews.forEach((review, index) => { %>
        <div class="w-1/4 px-4 mb-4">
          <div class="book-column bg-gray-700 p-4 rounded-lg relative">
            <h2 class="text-xl font-bold text-center" style="font-family: 'Arial', sans-serif;">
              <%= review.title || 'Nieznany tytuł' %>
            </h2>
            <p class="text-gray-300">Autor: <%= review.author %></p>
            <img src="<%= review.coverImage %>" alt="Okładka" class="w-32 h-48 object-cover">
            <a href="/book/<%= review._id %>" class="block mt-2 text-blue-500 hover:underline">Czytaj recenzję</a>
            <!-- Ikona edycji w prawym dolnym rogu -->
            <div class="edit-icon absolute bottom-2 right-2">
              <a href="/edit/<%= review._id %>">
                <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                  <path d="M12.687 14.408a3.01 3.01 0 0 1-1.533.821l-3.566 .713a3 3 0 0 1-3.53-3.53l.713-3.566a3.01 3.01 0 0 1 .821-1.533L10.905 2H2.167A2.169 2.169 0 0 0 0 4.167v11.666A2.169 2.169 0 0 0 2.167 18h11.666A2.169 2.169 0 0 0 16 15.833V11.1l-3.313 3.308Zm5.53-9.065l.546-.546a2.518 2.518 0 0 0 0-3.56 2.576 2.576 0 0 0-3.559 0l-.547.547 3.56 3.56Z"/>
                  <path d="M13.243 3.2 7.359 9.081a.5.5 0 0 0-.136.256L6.51 12.9a.5.5 0 0 0 .59.59l3.566-.713a.5.5 0 0 0 .255-.136L16.8 6.757 13.243 3.2Z"/>
                </svg>
              </a>
            </div>
          </div>
        </div>
        <% if ((index + 1) % 4 === 0) { %>
          <div class="w-full"></div> <!-- Nowy wiersz -->
        <% } %>
      <% }); %>
    </div>
  </div>
  
  
  <script>
    const coverImageInput = document.getElementById('coverImage');
    const fileNameLabel = document.getElementById('fileNameLabel');
    // JavaScript do obsługi opóźnienia
    // JavaScript do obsługi menu profilu
    const profileButton = document.getElementById('profile-button');
    const profileMenu = document.getElementById('profile-menu');
    profileButton.addEventListener('mouseenter', () => {
      profileMenu.classList.remove('hidden');
    });
    profileMenu.addEventListener('mouseleave', () => {
      setTimeout(() => {
        profileMenu.classList.add('hidden');
      }, 500); 
    });
  </script>
 <script>
  function changeProfilePicture(event) {
    const input = event.target;
    const profilePicture = document.getElementById("profilePicture");

    if (input.files && input.files[0]) {
      const reader = new FileReader();

      reader.onload = function (e) {
        profilePicture.src = e.target.result;
        uploadProfilePicture(input.files[0]); 
      };

      reader.readAsDataURL(input.files[0]);
    }
  }

  function uploadProfilePicture(file) {
    const formData = new FormData();
    formData.append("profilePicture", file);

    fetch("/upload-profile-picture", {
      method: "POST",
      body: formData,
    })
      .then((response) => response.json())
      .then((data) => {
        // Tutaj możesz obsłużyć odpowiedź serwera po przesłaniu pliku
        console.log(data);
      })
      .catch((error) => {
        console.error("Błąd przesyłania pliku:", error);
      });
  }
  function showEditDescriptionForm() {
    const editDescriptionForm = document.getElementById('edit-description-form');
    editDescriptionForm.classList.toggle('hidden');
  }
  async function updateDescription(event) {
      try {
        event.preventDefault();

        const newDescription = document.querySelector('textarea[name="newDescription"]').value;

        const response = await fetch('/update-description', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ newDescription })
        });

        if (!response.ok) {
          throw new Error('Nie udało się zaktualizować opisu.');
        }

        const responseData = await response.json();
        console.log('Response Data:', responseData);

        const userDescriptionElement = document.getElementById('user-description');
        userDescriptionElement.innerHTML = responseData.newDescription + '<br /><button onclick="showEditDescriptionForm()" class="text-blue-500 hover:underline">Edytuj opis</button>';
        document.getElementById('edit-description-form').classList.add('hidden');
      } catch (error) {
        console.error('Błąd:', error.message);
      }
    }

function saveDescription() {
  const newDescription = document.querySelector('textarea[name="newDescription"]').value;
  updateDescription(newDescription);
}
function showEditDescriptionForm() {
    const editForm = document.getElementById('edit-description-form');
    editForm.classList.toggle('hidden');
  }
 
</script>
</body>
</html>
